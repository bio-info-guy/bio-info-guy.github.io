---
title: "Quality Control on Suspicious Clusters"
date: "2024-12-12"
format:
  html:
    toc: true
    toc_float: true
    toc_collapsed: true
    html-math-method: katex
    
---
This tutorial touches on a common problem when performing quality control on scRNA-seq data:  **clusters that exhibit suspicious quality metrics**. Specifically, what should we do when we come across clusters with consistent QC metrics (i.e. High mitochondrial expression / low total counts) that differ consistently with other clusters. 

# Background
**Common scRNA-seq workflow:**
```{mermaid}
%%| label: fig-1
%%| fig-cap: Common scRNA-seq workflow
%%| fig-align: center
flowchart TD
  A(Preprocessing + Quantification) --> B(<span style="color:red;">Post-quantification QC and filtering</span>)
  B --> C(Normalization)
  C --> D(Integration)
  D --> E(Clustering)
  E --> G(<span style="color:red;">Post-Clustering QC</span>)
  E --> F(DE/Annotatation/Trajectory, etc.)
  G --> F
  
```
During post-quantification QC, metrics like the ones below are often calculated:

* Total transcript count
* Mt-RNA percentage
* Total genes expressed
* rRNA percentage
* Proportion of reads in top expressed genes
* Spike-ins percentage (if applicable)

Cells are then often filtered according to fixed thresholds: (i.e. < 500 genes expressed, > 10% mito-chondrial reads, >10 % rRNA reads) `OR` via adpative filtering theresholds using Median Absolute Deviation (i.e. `isOutlier` function in `scran`)


# Causes
1. Filtering was not stringent enough
2. Possible biological composition 
    + tumor, cardiomyocytes, lung cells, high-metabolic cells, etc. may exhibit higher mitochondrial content
    + quiescent / smaller cells may exhibit lower transcript levels

# How to Check

## QC metrics (filtering not stringent enough)

* Look for correlations between different QC metrics
* perform PCA and clustering on the quality metrcs to see if the same clusters appear
* If batches exist, see if the same clusters in different batches exhibit similar quality metrics

## Biological Markers and Pathways

* `findMarker` genes and compare with known marker genes to evaluate if clusters are true clusters
* Enrichment for relevant pathways and genesets and think of the biological relevance

## Automated approaches
There are certain packages built to address these scenerios

### MiQC
Jointly models the mitochondrial percentage and number of genes expressed to filter out cells

### ddqc
performs dapative thresholding in each cluster after lenient filtering of samples and clustering to achieve biologically aware filtering of low quality samples



## Examples
We provide some examples of using marker genes to evaluate whther or not the clusters in question are caused by biological or techincal factors

load some packages first
```{r}
#| warnings: false
#| message: false
library(rfigshare)
library(SingleCellExperiment)
library(scater)
library(org.Hs.eg.db)
library(scran)
library(AnnotationHub)
```

### Zheng, 2017 dataset of 8 FACS sorted celltypes mixed with equal proportions
This dataset contains 8 different cell types that were sorted with FACS and mixed in-silico, thus cell labels are known ahead of time

```{r}
#| fig-cap: zheng_data quality
#| fig-align: center
zheng_data <- readRDS('/Users/ysu13/My Drive/Repos/myBlog/zheng_data.RDS')
mito <- which(rowData(zheng_data)$SEQNAME=="MT")
stats <- perCellQCMetrics(zheng_data, subsets=list(Mt=mito))
qc <- quickPerCellQC(stats, percent_subsets=c("subsets_Mt_percent",
                                              "total", "detected"))
zheng_data <- logNormCounts(zheng_data)
gridExtra:::grid.arrange(
plotColData(zheng_data, x="phenoid", y="total_counts", colour_by="is_cell_control") + scale_y_log10() + ggtitle("Total count"),
plotColData(zheng_data, x="phenoid", y="total_features", colour_by="is_cell_control") + scale_y_log10() + ggtitle("Number of Genes"), nrow = 2)
```

### Show marker genes for zheng data set
```{r}

gridExtra:::grid.arrange(
  plotTSNE(zheng_data, colour_by = 'phenoid'),
  plotTSNE(zheng_data, colour_by = 'CD14')
, nrow = 2)
```


### He, 2020 dataset contains scRNA-seq for 15 different organs (only Heart samples are used here)
This dataset contains single cells from the heart, a certain degree of prefiltering has been performed (doublet removal, < 500 genes, < 1000 transcript counts and > 25% mitochondrial expression), the resulting clusters of heart samples are shown, cluster 7 shows higher mitochondrial content than other clusters
  

```{r}
human_heart <- scRNAseq::HeOrganAtlasData(tissue='heart')

human_heart$mito_gt_5 <- human_heart$percent.mito > 0.05
human_heart$mito_gt_10 <- human_heart$percent.mito > 0.1
human_heart$log10_nCount_RNA <- log10(human_heart$nCount_RNA)
human_heart$log10_nFeature_RNA <- log10(human_heart$nFeature_RNA)
human_heart$seurat_clusters <- as.factor(human_heart$seurat_clusters)
human_heart <- logNormCounts(human_heart)
gridExtra:::grid.arrange(
plotColData(human_heart, x="seurat_clusters", y="percent.mito",
            colour_by="mito_gt_5")  + ggtitle("Mitochondrial percentage"),
plotColData(human_heart, x = 'seurat_clusters', y = "log10_nFeature_RNA", color_by = 'mito_gt_5')+ ggtitle("Number of Genes")
, nrow = 2)
```
### Show marker genes for human heart dataset
```{r}
gridExtra:::grid.arrange(
  plotTSNE(human_heart, colour_by = 'seurat_clusters'),
  plotTSNE(human_heart, colour_by = 'MYH11')
, nrow = 2)
```





# Downstream Analysis and Interpretation
Ultimately, it is up to the researcher to decide whther keeping the clusters is of relevance to the study